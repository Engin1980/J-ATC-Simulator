@startuml

package "Base"{


interface IParser<T> {
  parse (in : Object) : T
  canAccept (in : Object) : boolean
}

interface AtcParser<S>
AtcParser --|> IParser : <IAtcSpeech>

interface PlaneParser<S>
PlaneParser --|> IParser : <SpeechList<IFromPlane>>

interface SystemParser<S>
SystemParser --|> IParser : <ISystemSpeech>

interface TextParser

}

package "Help"{

interface IWithHelp<T>{
  getHelp() : String
  getHelp(input : T) : String
}

}

package "Shortcuts"{
interface IWithShortcuts<T>{
   getShortcuts : ShortcutList<Shortcut<T>>
}

class ShortcutList<T>
{
  getAll() : Shortcut<T>
  add (from : T, to : T) : void
  remove (from : T) : void
}

class Shortcut<T>{
  from : T
  to : T
}

}

@enduml